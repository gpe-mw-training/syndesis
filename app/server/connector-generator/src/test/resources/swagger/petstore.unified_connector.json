{
  "name": "Swagger Petstore",
  "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
  "connectorGroup": {
    "id": "swagger-connector-template"
  },
  "connectorGroupId": "swagger-connector-template",
  "configuredProperties": {
    "specification": "{\"swagger\":\"2.0\",\"info\":{\"description\":\"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\"version\":\"1.0.0\",\"title\":\"Swagger Petstore\",\"termsOfService\":\"http://swagger.io/terms/\",\"contact\":{\"email\":\"apiteam@swagger.io\"},\"license\":{\"name\":\"Apache 2.0\",\"url\":\"http://www.apache.org/licenses/LICENSE-2.0.html\"}},\"host\":\"petstore.swagger.io\",\"basePath\":\"/v2\",\"tags\":[{\"name\":\"pet\",\"description\":\"Everything about your Pets\",\"externalDocs\":{\"description\":\"Find out more\",\"url\":\"http://swagger.io\"}},{\"name\":\"store\",\"description\":\"Access to Petstore orders\"},{\"name\":\"user\",\"description\":\"Operations about user\",\"externalDocs\":{\"description\":\"Find out more about our store\",\"url\":\"http://swagger.io\"}}],\"schemes\":[\"http\"],\"paths\":{\"/pet\":{\"post\":{\"tags\":[\"pet\"],\"summary\":\"Add a new pet to the store\",\"operationId\":\"addPet\",\"consumes\":[\"application/json\",\"application/xml\"],\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"Pet object that needs to be added to the store\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/Pet\"}}],\"responses\":{\"405\":{\"description\":\"Invalid input\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]},\"put\":{\"tags\":[\"pet\"],\"summary\":\"Update an existing pet\",\"operationId\":\"updatePet\",\"consumes\":[\"application/json\",\"application/xml\"],\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"Pet object that needs to be added to the store\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/Pet\"}}],\"responses\":{\"400\":{\"description\":\"Invalid ID supplied\"},\"404\":{\"description\":\"Pet not found\"},\"405\":{\"description\":\"Validation exception\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]}},\"/pet/findByStatus\":{\"get\":{\"tags\":[\"pet\"],\"summary\":\"Finds Pets by status\",\"description\":\"Multiple status values can be provided with comma separated strings\",\"operationId\":\"findPetsByStatus\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"status\",\"in\":\"query\",\"description\":\"Status values that need to be considered for filter\",\"required\":true,\"type\":\"array\",\"items\":{\"type\":\"string\",\"default\":\"available\",\"enum\":[\"available\",\"pending\",\"sold\"]},\"collectionFormat\":\"multi\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}},\"responseSchema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}}},\"400\":{\"description\":\"Invalid status value\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]}},\"/pet/findByTags\":{\"get\":{\"tags\":[\"pet\"],\"summary\":\"Finds Pets by tags\",\"description\":\"Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\"operationId\":\"findPetsByTags\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"tags\",\"in\":\"query\",\"description\":\"Tags to filter by\",\"required\":true,\"type\":\"array\",\"items\":{\"type\":\"string\"},\"collectionFormat\":\"multi\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}},\"responseSchema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}}},\"400\":{\"description\":\"Invalid tag value\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}],\"deprecated\":true}},\"/pet/{petId}\":{\"get\":{\"tags\":[\"pet\"],\"summary\":\"Find pet by ID\",\"description\":\"Returns a single pet\",\"operationId\":\"getPetById\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\",\"description\":\"ID of pet to return\",\"required\":true,\"type\":\"integer\",\"format\":\"int64\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"$ref\":\"#/definitions/Pet\"},\"responseSchema\":{\"$ref\":\"#/definitions/Pet\"}},\"400\":{\"description\":\"Invalid ID supplied\"},\"404\":{\"description\":\"Pet not found\"}},\"security\":[{\"api_key\":[]}]},\"post\":{\"tags\":[\"pet\"],\"summary\":\"Updates a pet in the store with form data\",\"operationId\":\"updatePetWithForm\",\"consumes\":[\"application/x-www-form-urlencoded\"],\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\",\"description\":\"ID of pet that needs to be updated\",\"required\":true,\"type\":\"integer\",\"format\":\"int64\"},{\"name\":\"name\",\"in\":\"formData\",\"description\":\"Updated name of the pet\",\"required\":false,\"type\":\"string\"},{\"name\":\"status\",\"in\":\"formData\",\"description\":\"Updated status of the pet\",\"required\":false,\"type\":\"string\"}],\"responses\":{\"405\":{\"description\":\"Invalid input\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]},\"delete\":{\"tags\":[\"pet\"],\"summary\":\"Deletes a pet\",\"operationId\":\"deletePet\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"api_key\",\"in\":\"header\",\"required\":false,\"type\":\"string\"},{\"name\":\"petId\",\"in\":\"path\",\"description\":\"Pet id to delete\",\"required\":true,\"type\":\"integer\",\"format\":\"int64\"}],\"responses\":{\"400\":{\"description\":\"Invalid ID supplied\"},\"404\":{\"description\":\"Pet not found\"}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]}},\"/pet/{petId}/uploadImage\":{\"post\":{\"tags\":[\"pet\"],\"summary\":\"uploads an image\",\"operationId\":\"uploadFile\",\"consumes\":[\"multipart/form-data\"],\"produces\":[\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\",\"description\":\"ID of pet to update\",\"required\":true,\"type\":\"integer\",\"format\":\"int64\"},{\"name\":\"additionalMetadata\",\"in\":\"formData\",\"description\":\"Additional data to pass to server\",\"required\":false,\"type\":\"string\"},{\"name\":\"file\",\"in\":\"formData\",\"description\":\"file to upload\",\"required\":false,\"type\":\"file\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"$ref\":\"#/definitions/ApiResponse\"},\"responseSchema\":{\"$ref\":\"#/definitions/ApiResponse\"}}},\"security\":[{\"petstore_auth\":[\"write:pets\",\"read:pets\"]}]}},\"/store/inventory\":{\"get\":{\"tags\":[\"store\"],\"summary\":\"Returns pet inventories by status\",\"description\":\"Returns a map of status codes to quantities\",\"operationId\":\"getInventory\",\"produces\":[\"application/json\"],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}},\"responseSchema\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}}}},\"security\":[{\"api_key\":[]}]}},\"/store/order\":{\"post\":{\"tags\":[\"store\"],\"summary\":\"Place an order for a pet\",\"operationId\":\"placeOrder\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"order placed for purchasing the pet\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/Order\"}}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"$ref\":\"#/definitions/Order\"},\"responseSchema\":{\"$ref\":\"#/definitions/Order\"}},\"400\":{\"description\":\"Invalid Order\"}}}},\"/store/order/{orderId}\":{\"get\":{\"tags\":[\"store\"],\"summary\":\"Find purchase order by ID\",\"description\":\"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\"operationId\":\"getOrderById\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"orderId\",\"in\":\"path\",\"description\":\"ID of pet that needs to be fetched\",\"required\":true,\"type\":\"integer\",\"maximum\":10.0,\"minimum\":1.0,\"format\":\"int64\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"$ref\":\"#/definitions/Order\"},\"responseSchema\":{\"$ref\":\"#/definitions/Order\"}},\"400\":{\"description\":\"Invalid ID supplied\"},\"404\":{\"description\":\"Order not found\"}}},\"delete\":{\"tags\":[\"store\"],\"summary\":\"Delete purchase order by ID\",\"description\":\"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\"operationId\":\"deleteOrder\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"orderId\",\"in\":\"path\",\"description\":\"ID of the order that needs to be deleted\",\"required\":true,\"type\":\"integer\",\"minimum\":1.0,\"format\":\"int64\"}],\"responses\":{\"400\":{\"description\":\"Invalid ID supplied\"},\"404\":{\"description\":\"Order not found\"}}}},\"/user\":{\"post\":{\"tags\":[\"user\"],\"summary\":\"Create user\",\"description\":\"This can only be done by the logged in user.\",\"operationId\":\"createUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"Created user object\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/User\"}}],\"responses\":{\"default\":{\"description\":\"successful operation\"}}}},\"/user/createWithArray\":{\"post\":{\"tags\":[\"user\"],\"summary\":\"Creates list of users with given input array\",\"operationId\":\"createUsersWithArrayInput\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"List of user object\",\"required\":true,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/User\"}}}],\"responses\":{\"default\":{\"description\":\"successful operation\"}}}},\"/user/createWithList\":{\"post\":{\"tags\":[\"user\"],\"summary\":\"Creates list of users with given input array\",\"operationId\":\"createUsersWithListInput\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"description\":\"List of user object\",\"required\":true,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/User\"}}}],\"responses\":{\"default\":{\"description\":\"successful operation\"}}}},\"/user/login\":{\"get\":{\"tags\":[\"user\"],\"summary\":\"Logs user into the system\",\"operationId\":\"loginUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"query\",\"description\":\"The user name for login\",\"required\":true,\"type\":\"string\"},{\"name\":\"password\",\"in\":\"query\",\"description\":\"The password for login in clear text\",\"required\":true,\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"headers\":{\"X-Rate-Limit\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"calls per hour allowed by the user\"},\"X-Expires-After\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"date in UTC when token expires\"}},\"schema\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"}},\"400\":{\"description\":\"Invalid username/password supplied\"}}}},\"/user/logout\":{\"get\":{\"tags\":[\"user\"],\"summary\":\"Logs out current logged in user session\",\"operationId\":\"logoutUser\",\"produces\":[\"application/xml\",\"application/json\"],\"responses\":{\"default\":{\"description\":\"successful operation\"}}}},\"/user/{username}\":{\"get\":{\"tags\":[\"user\"],\"summary\":\"Get user by user name\",\"operationId\":\"getUserByName\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\",\"description\":\"The name that needs to be fetched. Use user1 for testing. \",\"required\":true,\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"successful operation\",\"schema\":{\"$ref\":\"#/definitions/User\"},\"responseSchema\":{\"$ref\":\"#/definitions/User\"}},\"400\":{\"description\":\"Invalid username supplied\"},\"404\":{\"description\":\"User not found\"}}},\"put\":{\"tags\":[\"user\"],\"summary\":\"Updated user\",\"description\":\"This can only be done by the logged in user.\",\"operationId\":\"updateUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\",\"description\":\"name that need to be updated\",\"required\":true,\"type\":\"string\"},{\"in\":\"body\",\"name\":\"body\",\"description\":\"Updated user object\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/User\"}}],\"responses\":{\"400\":{\"description\":\"Invalid user supplied\"},\"404\":{\"description\":\"User not found\"}}},\"delete\":{\"tags\":[\"user\"],\"summary\":\"Delete user\",\"description\":\"This can only be done by the logged in user.\",\"operationId\":\"deleteUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\",\"description\":\"The name that needs to be deleted\",\"required\":true,\"type\":\"string\"}],\"responses\":{\"400\":{\"description\":\"Invalid username supplied\"},\"404\":{\"description\":\"User not found\"}}}}},\"securityDefinitions\":{\"petstore_auth\":{\"type\":\"oauth2\",\"authorizationUrl\":\"http://petstore.swagger.io/oauth/dialog\",\"flow\":\"implicit\",\"scopes\":{\"write:pets\":\"modify pets in your account\",\"read:pets\":\"read your pets\"}},\"api_key\":{\"type\":\"apiKey\",\"name\":\"api_key\",\"in\":\"header\"}},\"definitions\":{\"Order\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"}},\"Category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"User\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}},\"Tag\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}},\"Pet\":{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"$ref\":\"#/definitions/Category\"},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"$ref\":\"#/definitions/Tag\"}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}},\"ApiResponse\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}}},\"externalDocs\":{\"description\":\"Find out more about Swagger\",\"url\":\"http://swagger.io\"}}",
    "authenticationType": "oauth2",
    "basePath": "/v2",
    "host": "http://petstore.swagger.io",
    "authorizationEndpoint": "http://petstore.swagger.io/oauth/dialog",
    "oauthScopes": "write:pets read:pets"
  },
  "properties": {
    "authenticationType": {
      "kind": "property",
      "displayName": "Authentication Type",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "authentication-type"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "defaultValue": "oauth2",
      "enum": [
        {
          "value": "oauth2",
          "label": "OAuth 2.0"
        }
      ],
      "description": "Type of authentication used to connect to the API",
      "order": 1
    },
    "clientId": {
      "kind": "property",
      "displayName": "OAuth Client ID",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-client-id"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "OAuth Client ID, sometimes called Consumer Key",
      "order": 2
    },
    "clientSecret": {
      "kind": "property",
      "displayName": "OAuth Client Secret",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-client-secret"
      ],
      "deprecated": false,
      "secret": true,
      "componentProperty": true,
      "description": "OAuth Client Secret, sometimes called Consumer Secret",
      "order": 3
    },
    "accessToken": {
      "kind": "property",
      "displayName": "OAuth Access token",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-access-token"
      ],
      "deprecated": false,
      "secret": true,
      "componentProperty": true,
      "description": "OAuth Access token",
      "order": 4
    },
    "refreshToken": {
      "kind": "property",
      "displayName": "OAuth Refresh token",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-refresh-token"
      ],
      "deprecated": false,
      "secret": true,
      "componentProperty": true,
      "description": "OAuth Refresh token",
      "order": 5
    },
    "authorizationEndpoint": {
      "kind": "property",
      "defaultValue": "http://petstore.swagger.io/oauth/dialog",
      "displayName": "OAuth Authorization Endpoint URL",
      "group": "producer",
      "label": "producer",
      "required": true,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-authorization-url"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "URL for the start of the OAuth flow",
      "order": 6
    },
    "tokenEndpoint": {
      "kind": "property",
      "displayName": "OAuth Token Endpoint URL",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-access-token-url"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "URL to fetch the OAuth Access token",
      "order": 7
    },
    "oauthScopes": {
      "kind": "property",
      "defaultValue": "write:pets read:pets",
      "displayName": "OAuth Scopes",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [
        "oauth-scope"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "URL to fetch the OAuth Access token",
      "order": 8
    },
    "accessTokenExpiresAt": {
      "kind": "property",
      "displayName": "",
      "group": "producer",
      "label": "producer",
      "required": false,
      "type": "hidden",
      "javaType": "java.lang.Long",
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "Seconds in UTC when the access token expires"
    },
    "specification": {
      "kind": "property",
      "displayName": "Specification",
      "group": "producer",
      "label": "producer",
      "required": true,
      "type": "hidden",
      "javaType": "java.lang.String",
      "tags": [
        "upload",
        "url"
      ],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "description": "Swagger specification of the service"
    },
    "basePath": {
      "kind": "property",
      "displayName": "Base path",
      "group": "producer",
      "label": "producer",
      "required": true,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "defaultValue": "/v2",
      "description": "API basePath for example /v2. Default is unset if set overrides the value present in Swagger specification.",
      "order": 11
    },
    "host": {
      "kind": "property",
      "displayName": "Host",
      "group": "producer",
      "label": "producer",
      "required": true,
      "type": "string",
      "javaType": "java.lang.String",
      "tags": [],
      "deprecated": false,
      "secret": false,
      "componentProperty": true,
      "defaultValue": "http://petstore.swagger.io",
      "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port. Can be configured at the endpoint component or in the correspoding REST configuration in the Camel Context. If you give this component a name (e.g. petstore) that REST configuration is consulted first rest-swagger next and global configuration last. If set overrides any value found in the Swagger specification RestConfiguration. Can be overriden in endpoint configuration.",
      "order": 10
    }
  },
  "actions": [
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updatePet",
      "name": "Update an existing pet",
      "description": "Send PUT request to /pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"category\": {\"properties\": {\"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Category\"}}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"example\": \"doggie\", \"type\": \"string\"}, \"photoUrls\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"xml\": {\"name\": \"photoUrl\", \"wrapped\": true}}, \"status\": {\"description\": \"pet status in the store\", \"enum\": [ \"available\", \"pending\", \"sold\" ], \"type\": \"string\"}, \"tags\": {\"items\": {\"properties\": {\"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Tag\"}}, \"type\": \"array\", \"xml\": {\"name\": \"tag\", \"wrapped\": true}}}, \"required\": [ \"name\", \"photoUrls\" ], \"type\": \"object\", \"xml\": {\"name\": \"Pet\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "updatePet"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:addPet",
      "name": "Add a new pet to the store",
      "description": "Send POST request to /pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\" : {\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"], \"type\" : \"string\"}},\"xml\":{\"name\":\"Pet\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "addPet"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:findPetsByStatus",
      "name": "Finds Pets by status",
      "description": "Multiple status values can be provided with comma separated strings",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"status\": {\"description\": \"Status values that need to be considered for filter\", \"items\": {\"enum\": [ \"available\", \"pending\", \"sold\" ], \"type\" : \"string\"}, \"title\": \"status\", \"type\": \"array\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Pet\"}"
        },
        "configuredProperties": {
          "operationId": "findPetsByStatus"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:findPetsByTags",
      "name": "Finds Pets by tags",
      "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"tags\": {\"description\": \"Tags to filter by\", \"items\": {\"type\": \"string\"}, \"title\": \"tags\", \"type\": \"array\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Pet\"}"
        },
        "configuredProperties": {
          "operationId": "findPetsByTags"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getPetById",
      "name": "Find pet by ID",
      "description": "Returns a single pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"petId\": {\"description\": \"ID of pet to return\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Pet\"}"
        },
        "configuredProperties": {
          "operationId": "getPetById"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updatePetWithForm",
      "name": "Updates a pet in the store with form data",
      "description": "Send POST request to /pet/{petId}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"name\": {\"description\": \"Updated name of the pet\", \"title\": \"name\", \"type\": \"string\"}, \"petId\": {\"description\": \"ID of pet that needs to be updated\", \"title\": \"petId\", \"type\": \"integer\"}, \"status\": {\"description\": \"Updated status of the pet\", \"title\": \"status\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "updatePetWithForm"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deletePet",
      "name": "Deletes a pet",
      "description": "Send DELETE request to /pet/{petId}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"api_key\": {\"title\": \"api_key\", \"type\": \"string\"}, \"petId\": {\"description\": \"Pet id to delete\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "deletePet"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:uploadFile",
      "name": "uploads an image",
      "description": "Send POST request to /pet/{petId}/uploadImage",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"additionalMetadata\": {\"description\": \"Additional data to pass to server\", \"title\": \"additionalMetadata\", \"type\": \"string\"}, \"petId\": {\"description\": \"ID of pet to update\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"ApiResponse\"}"
        },
        "configuredProperties": {
          "operationId": "uploadFile"
        }
      },
      "tags": [
        "pet"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getInventory",
      "name": "Returns pet inventories by status",
      "description": "Returns a map of status codes to quantities",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\",\"title\": \"successful operation\",\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}}"
        },
        "configuredProperties": {
          "operationId": "getInventory"
        }
      },
      "tags": [
        "store"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:placeOrder",
      "name": "Place an order for a pet",
      "description": "Send POST request to /store/order",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"complete\": {\"default\": false, \"type\": \"boolean\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"petId\": {\"format\": \"int64\", \"type\": \"integer\"}, \"quantity\": {\"format\": \"int32\", \"type\": \"integer\"}, \"shipDate\": {\"format\": \"date-time\", \"type\": \"string\"}, \"status\": {\"description\": \"Order Status\", \"enum\": [ \"placed\", \"approved\", \"delivered\" ], \"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Order\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Order\"}"
        },
        "configuredProperties": {
          "operationId": "placeOrder"
        }
      },
      "tags": [
        "store"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getOrderById",
      "name": "Find purchase order by ID",
      "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"orderId\": {\"description\": \"ID of pet that needs to be fetched\", \"title\": \"orderId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"Order\"}"
        },
        "configuredProperties": {
          "operationId": "getOrderById"
        }
      },
      "tags": [
        "store"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deleteOrder",
      "name": "Delete purchase order by ID",
      "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"orderId\": {\"description\": \"ID of the order that needs to be deleted\", \"title\": \"orderId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "deleteOrder"
        }
      },
      "tags": [
        "store"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUser",
      "name": "Create user",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"User\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "createUser"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUsersWithArrayInput",
      "name": "Creates list of users with given input array",
      "description": "Send POST request to /user/createWithArray",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}},\"type\": \"object\", \"xml\": {\"name\": \"User\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "createUsersWithArrayInput"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUsersWithListInput",
      "name": "Creates list of users with given input array",
      "description": "Send POST request to /user/createWithList",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"User\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "createUsersWithListInput"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:loginUser",
      "name": "Logs user into the system",
      "description": "Send GET request to /user/login",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"password\": {\"description\": \"The password for login in clear text\", \"title\": \"password\", \"type\": \"string\"}, \"username\": {\"description\": \"The user name for login\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"string\",\"title\":\"successful operation\"}"
        },
        "configuredProperties": {
          "operationId": "loginUser"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:logoutUser",
      "name": "Logs out current logged in user session",
      "description": "Send GET request to /user/logout",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "logoutUser"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getUserByName",
      "name": "Get user by user name",
      "description": "Send GET request to /user/{username}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"username\": {\"description\": \"The name that needs to be fetched. Use user1 for testing.\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "name": "Response",
          "description": "API response payload",
          "kind": "json-schema",
          "specification": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"},\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"User\"}"
        },
        "configuredProperties": {
          "operationId": "getUserByName"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updateUser",
      "name": "Updated user",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}},\"type\": \"object\", \"xml\": {\"name\": \"User\"}}, \"parameters\": {\"properties\": {\"username\": {\"description\": \"name that need to be updated\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "updateUser"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    },
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deleteUser",
      "name": "Delete user",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorPrefix": "swagger-operation",
        "inputDataShape": {
          "name": "Request",
          "description": "API request payload",
          "kind": "json-schema",
          "specification": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\", \"properties\": {\"parameters\": {\"properties\": {\"username\": {\"description\": \"The name that needs to be deleted\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "configuredProperties": {
          "operationId": "deleteUser"
        }
      },
      "tags": [
        "user"
      ],
      "actionType": "connector",
      "pattern": "To"
    }
  ]
}
